/*常用git命令*/
git checkout -b dev或者git switch -c dev创建并切换到dev分支
git branch dev 创建dev分支
git checkout dev 或者 git switch dev从当前分支切换到dev分支
git merge dev 当前分支合并dev代码
git branch -d dev 删除dev分支
git tag dev 创建标签
如果要推送某个标签到远程，使用命令git push origin <tagname>：
/* git 撤销，放弃本地修改，放弃已提交修改 *./
1.未使用 git add 缓存代码时
	git checkout . 命令
2.已经使用了git add 缓存了代码
	2.1) git reset HEAD . 命令
	2.2) git reset HEAD '文件名'
3.已经用 git commit 提交了代码
  git reset --hard HEAD^

/*已有项目绑定git仓库*/
1.github创建一个空的仓库
2.初始化本地仓库，并提交内容到本地
	2.1) touch README.md
	2.2) git init
	2.3) git add .
	2.4) git commit -m '本地仓库初始化'
3.连接到远程仓库，并将代码同步到远程仓库
	3.1)git remote add origin '远程仓库地址'  //连接到远程仓库并为该仓库创建别名 , 别名为origin
	3.2)git push -u origin master  //创建一个 upStream （上传流），并将本地代码通过这个 upStream 推送到 别名为 origin 的仓库中的 master 分支上
4.修改本地代码，然后提交并推送到Github
	4:注意事项
	如果有多个远程仓库 或者 多个分支， 并且需要将代码推送到指定仓库的指定分支上
	git pull 仓库别名 仓库分支名 
	git push 仓库别名 仓库分支名
